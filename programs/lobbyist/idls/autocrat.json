{
  "address": "auToUr3CQza3D4qreT6Std2MTomfzvrEeCC5qh7ivW5",
  "metadata": {
    "name": "autocrat",
    "version": "0.5.0",
    "spec": "0.1.0"
  },
  "instructions": [
    {
      "name": "initialize_dao",
      "discriminator": [128, 226, 96, 90, 39, 56, 24, 196],
      "accounts": [
        {
          "name": "dao",
          "writable": true
        },
        {
          "name": "dao_creator",
          "signer": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        },
        {
          "name": "base_mint"
        },
        {
          "name": "quote_mint"
        },
        {
          "name": "squads_multisig",
          "writable": true
        },
        {
          "name": "squads_multisig_vault"
        },
        {
          "name": "squads_program"
        },
        {
          "name": "squads_program_config"
        },
        {
          "name": "squads_program_config_treasury",
          "writable": true
        },
        {
          "name": "spending_limit",
          "writable": true
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "InitializeDaoParams"
            }
          }
        }
      ]
    },
    {
      "name": "initialize_proposal",
      "discriminator": [50, 73, 156, 98, 129, 149, 21, 158],
      "accounts": [
        {
          "name": "proposal",
          "writable": true
        },
        {
          "name": "squads_proposal"
        },
        {
          "name": "dao",
          "writable": true
        },
        {
          "name": "question"
        },
        {
          "name": "quote_vault"
        },
        {
          "name": "base_vault"
        },
        {
          "name": "pass_amm"
        },
        {
          "name": "pass_lp_mint"
        },
        {
          "name": "fail_lp_mint"
        },
        {
          "name": "fail_amm"
        },
        {
          "name": "pass_lp_user_account",
          "writable": true
        },
        {
          "name": "fail_lp_user_account",
          "writable": true
        },
        {
          "name": "pass_lp_vault_account",
          "writable": true
        },
        {
          "name": "fail_lp_vault_account",
          "writable": true
        },
        {
          "name": "proposer",
          "signer": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "system_program"
        },
        {
          "name": "associated_token_program"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "InitializeProposalParams"
            }
          }
        }
      ]
    },
    {
      "name": "finalize_proposal",
      "discriminator": [23, 68, 51, 167, 109, 173, 187, 164],
      "accounts": [
        {
          "name": "proposal",
          "writable": true
        },
        {
          "name": "squads_proposal",
          "writable": true
        },
        {
          "name": "squads_multisig_program"
        },
        {
          "name": "squads_multisig"
        },
        {
          "name": "pass_amm"
        },
        {
          "name": "fail_amm"
        },
        {
          "name": "dao",
          "writable": true
        },
        {
          "name": "question",
          "writable": true
        },
        {
          "name": "pass_lp_user_account",
          "writable": true
        },
        {
          "name": "fail_lp_user_account",
          "writable": true
        },
        {
          "name": "pass_lp_vault_account",
          "writable": true
        },
        {
          "name": "fail_lp_vault_account",
          "writable": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "vault_program"
        },
        {
          "name": "vault_event_authority"
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": []
    },
    {
      "name": "update_dao",
      "discriminator": [131, 72, 75, 25, 112, 210, 109, 2],
      "accounts": [
        {
          "name": "dao",
          "writable": true
        },
        {
          "name": "squads_multisig_vault",
          "signer": true
        },
        {
          "name": "event_authority"
        },
        {
          "name": "program"
        }
      ],
      "args": [
        {
          "name": "dao_params",
          "type": {
            "defined": {
              "name": "UpdateDaoParams"
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Dao",
      "discriminator": [163, 9, 47, 31, 52, 85, 197, 49]
    },
    {
      "name": "Proposal",
      "discriminator": [26, 94, 189, 187, 116, 136, 53, 33]
    }
  ],
  "events": [
    {
      "name": "InitializeDaoEvent",
      "discriminator": [119, 48, 153, 116, 127, 37, 226, 228]
    },
    {
      "name": "UpdateDaoEvent",
      "discriminator": [12, 58, 244, 224, 171, 25, 33, 56]
    },
    {
      "name": "InitializeProposalEvent",
      "discriminator": [141, 56, 246, 192, 168, 254, 64, 111]
    },
    {
      "name": "FinalizeProposalEvent",
      "discriminator": [45, 29, 122, 181, 79, 224, 57, 141]
    },
    {
      "name": "ExecuteProposalEvent",
      "discriminator": [153, 12, 41, 73, 206, 114, 248, 233]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "AmmTooOld",
      "msg": "Amms must have been created within 5 minutes (counted in slots) of proposal initialization"
    },
    {
      "code": 6001,
      "name": "InvalidInitialObservation",
      "msg": "An amm has an `initial_observation` that doesn't match the `dao`'s config"
    },
    {
      "code": 6002,
      "name": "InvalidMaxObservationChange",
      "msg": "An amm has a `max_observation_change_per_update` that doesn't match the `dao`'s config"
    },
    {
      "code": 6003,
      "name": "InvalidStartDelaySlots",
      "msg": "An amm has a `start_delay_slots` that doesn't match the `dao`'s config"
    },
    {
      "code": 6004,
      "name": "InvalidSettlementAuthority",
      "msg": "One of the vaults has an invalid `settlement_authority`"
    },
    {
      "code": 6005,
      "name": "ProposalTooYoung",
      "msg": "Proposal is too young to be executed or rejected"
    },
    {
      "code": 6006,
      "name": "MarketsTooYoung",
      "msg": "Markets too young for proposal to be finalized. TWAP might need to be cranked"
    },
    {
      "code": 6007,
      "name": "ProposalAlreadyFinalized",
      "msg": "This proposal has already been finalized"
    },
    {
      "code": 6008,
      "name": "InvalidVaultNonce",
      "msg": "A conditional vault has an invalid nonce. A nonce should encode the proposal number"
    },
    {
      "code": 6009,
      "name": "ProposalNotPassed",
      "msg": "This proposal can't be executed because it isn't in the passed state"
    },
    {
      "code": 6010,
      "name": "InsufficientLpTokenBalance",
      "msg": "The proposer has fewer pass or fail LP tokens than they requested to lock"
    },
    {
      "code": 6011,
      "name": "InsufficientLpTokenLock",
      "msg": "The LP tokens passed in have less liquidity than the DAO's `min_quote_futarchic_liquidity` or `min_base_futachic_liquidity`"
    },
    {
      "code": 6012,
      "name": "ProposalDurationTooShort",
      "msg": "Proposal duration must be longer than TWAP start delay"
    },
    {
      "code": 6013,
      "name": "QuestionMustBeBinary",
      "msg": "Question must have exactly 2 outcomes for binary futarchy"
    },
    {
      "code": 6014,
      "name": "InvalidSquadsProposalStatus",
      "msg": "Squads proposal must be in Draft status"
    }
  ],
  "types": [
    {
      "name": "CommonFields",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "slot",
            "type": "u64"
          },
          {
            "name": "unix_timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "InitializeDaoParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "twap_initial_observation",
            "type": "u128"
          },
          {
            "name": "twap_max_observation_change_per_update",
            "type": "u128"
          },
          {
            "name": "twap_start_delay_slots",
            "type": "u64"
          },
          {
            "name": "min_quote_futarchic_liquidity",
            "type": "u64"
          },
          {
            "name": "min_base_futarchic_liquidity",
            "type": "u64"
          },
          {
            "name": "pass_threshold_bps",
            "type": "u16"
          },
          {
            "name": "slots_per_proposal",
            "type": "u64"
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "initial_spending_limit",
            "type": {
              "option": {
                "defined": {
                  "name": "InitialSpendingLimit"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "InitializeProposalParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "description_url",
            "type": "string"
          },
          {
            "name": "pass_lp_tokens_to_lock",
            "type": "u64"
          },
          {
            "name": "fail_lp_tokens_to_lock",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "UpdateDaoParams",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pass_threshold_bps",
            "type": {
              "option": "u16"
            }
          },
          {
            "name": "slots_per_proposal",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "twap_initial_observation",
            "type": {
              "option": "u128"
            }
          },
          {
            "name": "twap_max_observation_change_per_update",
            "type": {
              "option": "u128"
            }
          },
          {
            "name": "min_quote_futarchic_liquidity",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "min_base_futarchic_liquidity",
            "type": {
              "option": "u64"
            }
          }
        ]
      }
    },
    {
      "name": "InitialSpendingLimit",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "amount_per_month",
            "type": "u64"
          },
          {
            "name": "members",
            "type": {
              "vec": "pubkey"
            }
          }
        ]
      }
    },
    {
      "name": "ProposalState",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pending"
          },
          {
            "name": "Passed"
          },
          {
            "name": "Failed"
          }
        ]
      }
    },
    {
      "name": "Dao",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "nonce",
            "docs": ["`nonce` + `dao_creator` are PDA seeds"],
            "type": "u64"
          },
          {
            "name": "dao_creator",
            "type": "pubkey"
          },
          {
            "name": "pda_bump",
            "type": "u8"
          },
          {
            "name": "squads_multisig",
            "type": "pubkey"
          },
          {
            "name": "squads_multisig_vault",
            "type": "pubkey"
          },
          {
            "name": "base_mint",
            "type": "pubkey"
          },
          {
            "name": "quote_mint",
            "type": "pubkey"
          },
          {
            "name": "proposal_count",
            "type": "u32"
          },
          {
            "name": "pass_threshold_bps",
            "type": "u16"
          },
          {
            "name": "slots_per_proposal",
            "type": "u64"
          },
          {
            "name": "twap_initial_observation",
            "docs": [
              "For manipulation-resistance the TWAP is a time-weighted average observation,",
              "where observation tries to approximate price but can only move by",
              "`twap_max_observation_change_per_update` per update. Because it can only move",
              "a little bit per update, you need to check that it has a good initial observation.",
              "Otherwise, an attacker could create a very high initial observation in the pass",
              "market and a very low one in the fail market to force the proposal to pass.",
              "",
              "We recommend setting an initial observation around the spot price of the token,",
              "and max observation change per update around 2% the spot price of the token.",
              "For example, if the spot price of META is $400, we'd recommend setting an initial",
              "observation of 400 (converted into the AMM prices) and a max observation change per",
              "update of 8 (also converted into the AMM prices). Observations can be updated once",
              "a minute, so 2% allows the proposal market to reach double the spot price or 0",
              "in 50 minutes."
            ],
            "type": "u128"
          },
          {
            "name": "twap_max_observation_change_per_update",
            "type": "u128"
          },
          {
            "name": "twap_start_delay_slots",
            "docs": [
              "Forces TWAP calculation to start after amm.created_at_slot + twap_start_delay_slots"
            ],
            "type": "u64"
          },
          {
            "name": "min_quote_futarchic_liquidity",
            "docs": [
              "As an anti-spam measure and to help liquidity, you need to lock up some liquidity",
              "in both futarchic markets in order to create a proposal.",
              "",
              "For example, for META, we can use a `min_quote_futarchic_liquidity` of",
              "5000 * 1_000_000 (5000 USDC) and a `min_base_futarchic_liquidity` of",
              "10 * 1_000_000_000 (10 META)."
            ],
            "type": "u64"
          },
          {
            "name": "min_base_futarchic_liquidity",
            "type": "u64"
          },
          {
            "name": "seq_num",
            "type": "u64"
          },
          {
            "name": "initial_spending_limit",
            "type": {
              "option": {
                "defined": {
                  "name": "InitialSpendingLimit"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "Proposal",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "number",
            "type": "u32"
          },
          {
            "name": "proposer",
            "type": "pubkey"
          },
          {
            "name": "description_url",
            "type": "string"
          },
          {
            "name": "slot_enqueued",
            "type": "u64"
          },
          {
            "name": "state",
            "type": {
              "defined": {
                "name": "ProposalState"
              }
            }
          },
          {
            "name": "pass_amm",
            "type": "pubkey"
          },
          {
            "name": "fail_amm",
            "type": "pubkey"
          },
          {
            "name": "base_vault",
            "type": "pubkey"
          },
          {
            "name": "quote_vault",
            "type": "pubkey"
          },
          {
            "name": "dao",
            "type": "pubkey"
          },
          {
            "name": "pass_lp_tokens_locked",
            "type": "u64"
          },
          {
            "name": "fail_lp_tokens_locked",
            "type": "u64"
          },
          {
            "name": "pda_bump",
            "type": "u8"
          },
          {
            "name": "question",
            "type": "pubkey"
          },
          {
            "name": "duration_in_slots",
            "type": "u64"
          },
          {
            "name": "squads_proposal",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "InitializeDaoEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "common",
            "type": {
              "defined": {
                "name": "CommonFields"
              }
            }
          },
          {
            "name": "dao",
            "type": "pubkey"
          },
          {
            "name": "base_mint",
            "type": "pubkey"
          },
          {
            "name": "quote_mint",
            "type": "pubkey"
          },
          {
            "name": "pass_threshold_bps",
            "type": "u16"
          },
          {
            "name": "slots_per_proposal",
            "type": "u64"
          },
          {
            "name": "twap_initial_observation",
            "type": "u128"
          },
          {
            "name": "twap_max_observation_change_per_update",
            "type": "u128"
          },
          {
            "name": "min_quote_futarchic_liquidity",
            "type": "u64"
          },
          {
            "name": "min_base_futarchic_liquidity",
            "type": "u64"
          },
          {
            "name": "initial_spending_limit",
            "type": {
              "option": {
                "defined": {
                  "name": "InitialSpendingLimit"
                }
              }
            }
          },
          {
            "name": "squads_multisig",
            "type": "pubkey"
          },
          {
            "name": "squads_multisig_vault",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "UpdateDaoEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "common",
            "type": {
              "defined": {
                "name": "CommonFields"
              }
            }
          },
          {
            "name": "dao",
            "type": "pubkey"
          },
          {
            "name": "pass_threshold_bps",
            "type": "u16"
          },
          {
            "name": "slots_per_proposal",
            "type": "u64"
          },
          {
            "name": "twap_initial_observation",
            "type": "u128"
          },
          {
            "name": "twap_max_observation_change_per_update",
            "type": "u128"
          },
          {
            "name": "min_quote_futarchic_liquidity",
            "type": "u64"
          },
          {
            "name": "min_base_futarchic_liquidity",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "InitializeProposalEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "common",
            "type": {
              "defined": {
                "name": "CommonFields"
              }
            }
          },
          {
            "name": "proposal",
            "type": "pubkey"
          },
          {
            "name": "dao",
            "type": "pubkey"
          },
          {
            "name": "question",
            "type": "pubkey"
          },
          {
            "name": "quote_vault",
            "type": "pubkey"
          },
          {
            "name": "base_vault",
            "type": "pubkey"
          },
          {
            "name": "pass_amm",
            "type": "pubkey"
          },
          {
            "name": "fail_amm",
            "type": "pubkey"
          },
          {
            "name": "pass_lp_mint",
            "type": "pubkey"
          },
          {
            "name": "fail_lp_mint",
            "type": "pubkey"
          },
          {
            "name": "proposer",
            "type": "pubkey"
          },
          {
            "name": "number",
            "type": "u32"
          },
          {
            "name": "pass_lp_tokens_locked",
            "type": "u64"
          },
          {
            "name": "fail_lp_tokens_locked",
            "type": "u64"
          },
          {
            "name": "pda_bump",
            "type": "u8"
          },
          {
            "name": "duration_in_slots",
            "type": "u64"
          },
          {
            "name": "squads_proposal",
            "type": "pubkey"
          },
          {
            "name": "squads_multisig",
            "type": "pubkey"
          },
          {
            "name": "squads_multisig_vault",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "FinalizeProposalEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "common",
            "type": {
              "defined": {
                "name": "CommonFields"
              }
            }
          },
          {
            "name": "proposal",
            "type": "pubkey"
          },
          {
            "name": "dao",
            "type": "pubkey"
          },
          {
            "name": "pass_market_twap",
            "type": "u128"
          },
          {
            "name": "fail_market_twap",
            "type": "u128"
          },
          {
            "name": "threshold",
            "type": "u128"
          },
          {
            "name": "state",
            "type": {
              "defined": {
                "name": "ProposalState"
              }
            }
          },
          {
            "name": "squads_proposal",
            "type": "pubkey"
          },
          {
            "name": "squads_multisig",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "ExecuteProposalEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "common",
            "type": {
              "defined": {
                "name": "CommonFields"
              }
            }
          },
          {
            "name": "proposal",
            "type": "pubkey"
          },
          {
            "name": "dao",
            "type": "pubkey"
          }
        ]
      }
    }
  ]
}
